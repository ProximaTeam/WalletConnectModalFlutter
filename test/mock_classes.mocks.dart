// Mocks generated by Mockito 5.4.2 from annotations
// in walletconnect_modal_flutter/test/mock_classes.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i30;
import 'dart:ui' as _i18;

import 'package:event/event.dart' as _i4;
import 'package:flutter/material.dart' as _i2;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:url_launcher/url_launcher.dart' as _i21;
import 'package:w_common/disposable.dart' as _i6;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/i_message_tracker.dart'
    as _i11;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/json_rpc_2/src/peer.dart'
    as _i27;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/relay_client.dart'
    as _i26;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/websocket/i_websocket_handler.dart'
    as _i12;
import 'package:walletconnect_flutter_v2/apis/core/store/i_generic_store.dart'
    as _i8;
import 'package:walletconnect_flutter_v2/apis/core/store/i_store.dart' as _i10;
import 'package:walletconnect_flutter_v2/apis/sign_api/i_sessions.dart' as _i9;
import 'package:walletconnect_flutter_v2/walletconnect_flutter_v2.dart' as _i7;
import 'package:walletconnect_modal_flutter/models/listings.dart' as _i16;
import 'package:walletconnect_modal_flutter/services/explorer/explorer_service.dart'
    as _i13;
import 'package:walletconnect_modal_flutter/services/explorer/i_explorer_service.dart'
    as _i14;
import 'package:walletconnect_modal_flutter/services/storage_service/storage_service.dart'
    as _i28;
import 'package:walletconnect_modal_flutter/services/utils/platform/i_platform_utils.dart'
    as _i23;
import 'package:walletconnect_modal_flutter/services/utils/platform/platform_utils.dart'
    as _i22;
import 'package:walletconnect_modal_flutter/services/utils/toast/toast_message.dart'
    as _i25;
import 'package:walletconnect_modal_flutter/services/utils/toast/toast_utils.dart'
    as _i24;
import 'package:walletconnect_modal_flutter/services/utils/url/url_utils.dart'
    as _i20;
import 'package:walletconnect_modal_flutter/walletconnect_modal_flutter.dart'
    as _i17;
import 'package:walletconnect_modal_flutter/widgets/grid_list/grid_list_item_model.dart'
    as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_2<T extends _i4.EventArgs> extends _i1.SmartFake
    implements _i4.Event<T> {
  _FakeEvent_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_3<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManagedDisposer_4 extends _i1.SmartFake
    implements _i6.ManagedDisposer {
  _FakeManagedDisposer_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimer_5 extends _i1.SmartFake implements _i5.Timer {
  _FakeTimer_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_6<T1> extends _i1.SmartFake
    implements _i5.StreamSubscription<T1> {
  _FakeStreamSubscription_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompleter_7<T1> extends _i1.SmartFake implements _i5.Completer<T1> {
  _FakeCompleter_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeICore_8 extends _i1.SmartFake implements _i7.ICore {
  _FakeICore_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePairingMetadata_9 extends _i1.SmartFake
    implements _i7.PairingMetadata {
  _FakePairingMetadata_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeISignEngine_10 extends _i1.SmartFake implements _i7.ISignEngine {
  _FakeISignEngine_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIAuthEngine_11 extends _i1.SmartFake implements _i7.IAuthEngine {
  _FakeIAuthEngine_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIGenericStore_12<T> extends _i1.SmartFake
    implements _i8.IGenericStore<T> {
  _FakeIGenericStore_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeISessions_13 extends _i1.SmartFake implements _i9.ISessions {
  _FakeISessions_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIPairingStore_14 extends _i1.SmartFake implements _i7.IPairingStore {
  _FakeIPairingStore_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectResponse_15 extends _i1.SmartFake
    implements _i7.ConnectResponse {
  _FakeConnectResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRequestResponse_16 extends _i1.SmartFake
    implements _i7.AuthRequestResponse {
  _FakeAuthRequestResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIStore_17<T> extends _i1.SmartFake implements _i10.IStore<T> {
  _FakeIStore_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSessionData_18 extends _i1.SmartFake implements _i7.SessionData {
  _FakeSessionData_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIMessageTracker_19 extends _i1.SmartFake
    implements _i11.IMessageTracker {
  _FakeIMessageTracker_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIWebSocketHandler_20 extends _i1.SmartFake
    implements _i12.IWebSocketHandler {
  _FakeIWebSocketHandler_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_21 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_22 extends _i1.SmartFake
    implements _i3.StreamedResponse {
  _FakeStreamedResponse_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExplorerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExplorerService extends _i1.Mock implements _i13.ExplorerService {
  MockExplorerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get explorerUriRoot => (super.noSuchMethod(
        Invocation.getter(#explorerUriRoot),
        returnValue: '',
      ) as String);
  @override
  String get projectId => (super.noSuchMethod(
        Invocation.getter(#projectId),
        returnValue: '',
      ) as String);
  @override
  set recommendedWalletIds(Set<String>? _recommendedWalletIds) =>
      super.noSuchMethod(
        Invocation.setter(
          #recommendedWalletIds,
          _recommendedWalletIds,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.ExcludedWalletState get excludedWalletState => (super.noSuchMethod(
        Invocation.getter(#excludedWalletState),
        returnValue: _i14.ExcludedWalletState.all,
      ) as _i14.ExcludedWalletState);
  @override
  set excludedWalletState(_i14.ExcludedWalletState? _excludedWalletState) =>
      super.noSuchMethod(
        Invocation.setter(
          #excludedWalletState,
          _excludedWalletState,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set excludedWalletIds(Set<String>? _excludedWalletIds) => super.noSuchMethod(
        Invocation.setter(
          #excludedWalletIds,
          _excludedWalletIds,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ValueNotifier<List<_i15.GridListItemModel<_i16.WalletData>>>
      get itemList => (super.noSuchMethod(
            Invocation.getter(#itemList),
            returnValue: _FakeValueNotifier_0<
                List<_i15.GridListItemModel<_i16.WalletData>>>(
              this,
              Invocation.getter(#itemList),
            ),
          ) as _i2
              .ValueNotifier<List<_i15.GridListItemModel<_i16.WalletData>>>);
  @override
  set itemList(
          _i2.ValueNotifier<List<_i15.GridListItemModel<_i16.WalletData>>>?
              _itemList) =>
      super.noSuchMethod(
        Invocation.setter(
          #itemList,
          _itemList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ValueNotifier<bool> get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#initialized),
        ),
      ) as _i2.ValueNotifier<bool>);
  @override
  set initialized(_i2.ValueNotifier<bool>? _initialized) => super.noSuchMethod(
        Invocation.setter(
          #initialized,
          _initialized,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);
  @override
  String get referer => (super.noSuchMethod(
        Invocation.getter(#referer),
        returnValue: '',
      ) as String);
  @override
  set previousRecentWallet(String? _previousRecentWallet) => super.noSuchMethod(
        Invocation.setter(
          #previousRecentWallet,
          _previousRecentWallet,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void filterList({String? query}) => super.noSuchMethod(
        Invocation.method(
          #filterList,
          [],
          {#query: query},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateSort() => super.noSuchMethod(
        Invocation.method(
          #updateSort,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getWalletImageUrl({required String? imageId}) => (super.noSuchMethod(
        Invocation.method(
          #getWalletImageUrl,
          [],
          {#imageId: imageId},
        ),
        returnValue: '',
      ) as String);
  @override
  String getAssetImageUrl({required String? imageId}) => (super.noSuchMethod(
        Invocation.method(
          #getAssetImageUrl,
          [],
          {#imageId: imageId},
        ),
        returnValue: '',
      ) as String);
  @override
  _i7.Redirect? getRedirect({required String? name}) =>
      (super.noSuchMethod(Invocation.method(
        #getRedirect,
        [],
        {#name: name},
      )) as _i7.Redirect?);
  @override
  _i5.Future<List<_i16.Listing>> fetchListings({
    required String? endpoint,
    required String? referer,
    _i16.ListingParams? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchListings,
          [],
          {
            #endpoint: endpoint,
            #referer: referer,
            #params: params,
          },
        ),
        returnValue: _i5.Future<List<_i16.Listing>>.value(<_i16.Listing>[]),
      ) as _i5.Future<List<_i16.Listing>>);
  @override
  List<_i16.Listing> filterExcludedListings(
          {required List<_i16.Listing>? listings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterExcludedListings,
          [],
          {#listings: listings},
        ),
        returnValue: <_i16.Listing>[],
      ) as List<_i16.Listing>);
}

/// A class which mocks [WalletConnectModalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletConnectModalService extends _i1.Mock
    implements _i17.WalletConnectModalService {
  MockWalletConnectModalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Event<_i4.EventArgs> get onPairingExpire => (super.noSuchMethod(
        Invocation.getter(#onPairingExpire),
        returnValue: _FakeEvent_2<_i4.EventArgs>(
          this,
          Invocation.getter(#onPairingExpire),
        ),
      ) as _i4.Event<_i4.EventArgs>);
  @override
  set connectResponse(_i7.ConnectResponse? _connectResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectResponse,
          _connectResponse,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set context(_i2.BuildContext? _context) => super.noSuchMethod(
        Invocation.setter(
          #context,
          _context,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);
  @override
  String get projectId => (super.noSuchMethod(
        Invocation.getter(#projectId),
        returnValue: '',
      ) as String);
  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i7.RequiredNamespace> get requiredNamespaces =>
      (super.noSuchMethod(
        Invocation.getter(#requiredNamespaces),
        returnValue: <String, _i7.RequiredNamespace>{},
      ) as Map<String, _i7.RequiredNamespace>);
  @override
  Map<String, _i7.RequiredNamespace> get optionalNamespaces =>
      (super.noSuchMethod(
        Invocation.getter(#optionalNamespaces),
        returnValue: <String, _i7.RequiredNamespace>{},
      ) as Map<String, _i7.RequiredNamespace>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<Null> get didDispose => (super.noSuchMethod(
        Invocation.getter(#didDispose),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  String get disposableTypeName => (super.noSuchMethod(
        Invocation.getter(#disposableTypeName),
        returnValue: '',
      ) as String);
  @override
  int get disposalTreeSize => (super.noSuchMethod(
        Invocation.getter(#disposalTreeSize),
        returnValue: 0,
      ) as int);
  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);
  @override
  bool get isLeakFlagSet => (super.noSuchMethod(
        Invocation.getter(#isLeakFlagSet),
        returnValue: false,
      ) as bool);
  @override
  bool get isOrWillBeDisposed => (super.noSuchMethod(
        Invocation.getter(#isOrWillBeDisposed),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> clearPreviousInactivePairings() => (super.noSuchMethod(
        Invocation.method(
          #clearPreviousInactivePairings,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<Null> onDispose() => (super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  _i5.Future<void> open({
    required _i2.BuildContext? context,
    _i2.Widget? startWidget,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #open,
          [],
          {
            #context: context,
            #startWidget: startWidget,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> reconnectRelay() => (super.noSuchMethod(
        Invocation.method(
          #reconnectRelay,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> disconnect({bool? disconnectAllSessions = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
          {#disconnectAllSessions: disconnectAllSessions},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> launchCurrentWallet() => (super.noSuchMethod(
        Invocation.method(
          #launchCurrentWallet,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> rebuildConnectionUri() => (super.noSuchMethod(
        Invocation.method(
          #rebuildConnectionUri,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> connectWallet({required _i16.WalletData? walletData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectWallet,
          [],
          {#walletData: walletData},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void setRequiredNamespaces(
          {required Map<String, _i7.RequiredNamespace>? requiredNamespaces}) =>
      super.noSuchMethod(
        Invocation.method(
          #setRequiredNamespaces,
          [],
          {#requiredNamespaces: requiredNamespaces},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOptionalNamespaces(
          {required Map<String, _i7.RequiredNamespace>? optionalNamespaces}) =>
      super.noSuchMethod(
        Invocation.method(
          #setOptionalNamespaces,
          [],
          {#optionalNamespaces: optionalNamespaces},
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getReferer() => (super.noSuchMethod(
        Invocation.method(
          #getReferer,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<void> disconnectSession(_i7.SessionData? toDisconnect) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnectSession,
          [toDisconnect],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void registerListeners() => super.noSuchMethod(
        Invocation.method(
          #registerListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void unregisterListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onSessionConnect(_i7.SessionConnect? args) => super.noSuchMethod(
        Invocation.method(
          #onSessionConnect,
          [args],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onSessionDelete(_i7.SessionDelete? args) => super.noSuchMethod(
        Invocation.method(
          #onSessionDelete,
          [args],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onRelayClientConnect(_i4.EventArgs? args) => super.noSuchMethod(
        Invocation.method(
          #onRelayClientConnect,
          [args],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onRelayClientError(_i7.ErrorEvent? args) => super.noSuchMethod(
        Invocation.method(
          #onRelayClientError,
          [args],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> awaitConnectResponse() => (super.noSuchMethod(
        Invocation.method(
          #awaitConnectResponse,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void checkInitialized() => super.noSuchMethod(
        Invocation.method(
          #checkInitialized,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<Null> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T> awaitBeforeDispose<T>(_i5.Future<T>? future) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitBeforeDispose,
          [future],
        ),
        returnValue: _i19.ifNotNull(
              _i19.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #awaitBeforeDispose,
                  [future],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #awaitBeforeDispose,
                [future],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  void flagLeak([String? description]) => super.noSuchMethod(
        Invocation.method(
          #flagLeak,
          [description],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T> getManagedDelayedFuture<T>(
    Duration? duration,
    T Function()? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedDelayedFuture,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _i19.ifNotNull(
              _i19.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getManagedDelayedFuture,
                  [
                    duration,
                    callback,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #getManagedDelayedFuture,
                [
                  duration,
                  callback,
                ],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i6.ManagedDisposer getManagedDisposer(_i6.Disposer? disposer) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedDisposer,
          [disposer],
        ),
        returnValue: _FakeManagedDisposer_4(
          this,
          Invocation.method(
            #getManagedDisposer,
            [disposer],
          ),
        ),
      ) as _i6.ManagedDisposer);
  @override
  _i5.Timer getManagedTimer(
    Duration? duration,
    void Function()? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedTimer,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _FakeTimer_5(
          this,
          Invocation.method(
            #getManagedTimer,
            [
              duration,
              callback,
            ],
          ),
        ),
      ) as _i5.Timer);
  @override
  _i5.Timer getManagedPeriodicTimer(
    Duration? duration,
    void Function(_i5.Timer)? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedPeriodicTimer,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _FakeTimer_5(
          this,
          Invocation.method(
            #getManagedPeriodicTimer,
            [
              duration,
              callback,
            ],
          ),
        ),
      ) as _i5.Timer);
  @override
  _i5.StreamSubscription<T> listenToStream<T>(
    _i5.Stream<T>? stream,
    void Function(T)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenToStream,
          [
            stream,
            onData,
          ],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue: _FakeStreamSubscription_6<T>(
          this,
          Invocation.method(
            #listenToStream,
            [
              stream,
              onData,
            ],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
      ) as _i5.StreamSubscription<T>);
  @override
  T manageAndReturnTypedDisposable<T extends _i6.Disposable>(T? disposable) =>
      (super.noSuchMethod(
        Invocation.method(
          #manageAndReturnTypedDisposable,
          [disposable],
        ),
        returnValue: _i19.dummyValue<T>(
          this,
          Invocation.method(
            #manageAndReturnTypedDisposable,
            [disposable],
          ),
        ),
      ) as T);
  @override
  _i5.Completer<T> manageCompleter<T>(_i5.Completer<T>? completer) =>
      (super.noSuchMethod(
        Invocation.method(
          #manageCompleter,
          [completer],
        ),
        returnValue: _FakeCompleter_7<T>(
          this,
          Invocation.method(
            #manageCompleter,
            [completer],
          ),
        ),
      ) as _i5.Completer<T>);
  @override
  void manageDisposable(_i6.Disposable? disposable) => super.noSuchMethod(
        Invocation.method(
          #manageDisposable,
          [disposable],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void manageStreamController(_i5.StreamController<dynamic>? controller) =>
      super.noSuchMethod(
        Invocation.method(
          #manageStreamController,
          [controller],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<Null> onWillDispose() => (super.noSuchMethod(
        Invocation.method(
          #onWillDispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
}

/// A class which mocks [UrlUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlUtils extends _i1.Mock implements _i20.UrlUtils {
  MockUrlUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> Function(String) get androidAppCheck => (super.noSuchMethod(
        Invocation.getter(#androidAppCheck),
        returnValue: (String uri) => _i5.Future<bool>.value(false),
      ) as _i5.Future<bool> Function(String));
  @override
  _i5.Future<bool> Function(
    Uri, {
    _i21.LaunchMode? mode,
  }) get launchUrlFunc => (super.noSuchMethod(
        Invocation.getter(#launchUrlFunc),
        returnValue: (
          Uri url, {
          _i21.LaunchMode? mode,
        }) =>
            _i5.Future<bool>.value(false),
      ) as _i5.Future<bool> Function(
        Uri, {
        _i21.LaunchMode? mode,
      }));
  @override
  _i5.Future<bool> Function(Uri) get canLaunchUrlFunc => (super.noSuchMethod(
        Invocation.getter(#canLaunchUrlFunc),
        returnValue: (Uri url) => _i5.Future<bool>.value(false),
      ) as _i5.Future<bool> Function(Uri));
  @override
  _i5.Future<bool> isInstalled(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #isInstalled,
          [uri],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> launchUrl(
    Uri? url, {
    _i21.LaunchMode? mode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchUrl,
          [url],
          {#mode: mode},
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<void> launchRedirect({
    Uri? nativeUri,
    Uri? universalUri,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchRedirect,
          [],
          {
            #nativeUri: nativeUri,
            #universalUri: universalUri,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> navigateDeepLink({
    String? nativeLink,
    String? universalLink,
    required String? wcURI,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateDeepLink,
          [],
          {
            #nativeLink: nativeLink,
            #universalLink: universalLink,
            #wcURI: wcURI,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [PlatformUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformUtils extends _i1.Mock implements _i22.PlatformUtils {
  MockPlatformUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i23.PlatformExact getPlatformExact() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformExact,
          [],
        ),
        returnValue: _i23.PlatformExact.iOS,
      ) as _i23.PlatformExact);
  @override
  _i23.PlatformType getPlatformType() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformType,
          [],
        ),
        returnValue: _i23.PlatformType.mobile,
      ) as _i23.PlatformType);
  @override
  bool canDetectInstalledApps() => (super.noSuchMethod(
        Invocation.method(
          #canDetectInstalledApps,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isBottomSheet() => (super.noSuchMethod(
        Invocation.method(
          #isBottomSheet,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isLongBottomSheet(_i2.Orientation? orientation) => (super.noSuchMethod(
        Invocation.method(
          #isLongBottomSheet,
          [orientation],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isMobileWidth(double? width) => (super.noSuchMethod(
        Invocation.method(
          #isMobileWidth,
          [width],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [ToastUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockToastUtils extends _i1.Mock implements _i24.ToastUtils {
  MockToastUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i25.ToastMessage?> get toasts => (super.noSuchMethod(
        Invocation.getter(#toasts),
        returnValue: _i5.Stream<_i25.ToastMessage?>.empty(),
      ) as _i5.Stream<_i25.ToastMessage?>);
  @override
  _i5.Future<Null> get didDispose => (super.noSuchMethod(
        Invocation.getter(#didDispose),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  String get disposableTypeName => (super.noSuchMethod(
        Invocation.getter(#disposableTypeName),
        returnValue: '',
      ) as String);
  @override
  int get disposalTreeSize => (super.noSuchMethod(
        Invocation.getter(#disposalTreeSize),
        returnValue: 0,
      ) as int);
  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);
  @override
  bool get isLeakFlagSet => (super.noSuchMethod(
        Invocation.getter(#isLeakFlagSet),
        returnValue: false,
      ) as bool);
  @override
  bool get isOrWillBeDisposed => (super.noSuchMethod(
        Invocation.getter(#isOrWillBeDisposed),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> show(_i25.ToastMessage? message) => (super.noSuchMethod(
        Invocation.method(
          #show,
          [message],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T> awaitBeforeDispose<T>(_i5.Future<T>? future) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitBeforeDispose,
          [future],
        ),
        returnValue: _i19.ifNotNull(
              _i19.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #awaitBeforeDispose,
                  [future],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #awaitBeforeDispose,
                [future],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i5.Future<Null> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  void flagLeak([String? description]) => super.noSuchMethod(
        Invocation.method(
          #flagLeak,
          [description],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T> getManagedDelayedFuture<T>(
    Duration? duration,
    T Function()? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedDelayedFuture,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _i19.ifNotNull(
              _i19.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getManagedDelayedFuture,
                  [
                    duration,
                    callback,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #getManagedDelayedFuture,
                [
                  duration,
                  callback,
                ],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i6.ManagedDisposer getManagedDisposer(_i6.Disposer? disposer) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedDisposer,
          [disposer],
        ),
        returnValue: _FakeManagedDisposer_4(
          this,
          Invocation.method(
            #getManagedDisposer,
            [disposer],
          ),
        ),
      ) as _i6.ManagedDisposer);
  @override
  _i5.Timer getManagedTimer(
    Duration? duration,
    void Function()? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedTimer,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _FakeTimer_5(
          this,
          Invocation.method(
            #getManagedTimer,
            [
              duration,
              callback,
            ],
          ),
        ),
      ) as _i5.Timer);
  @override
  _i5.Timer getManagedPeriodicTimer(
    Duration? duration,
    void Function(_i5.Timer)? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedPeriodicTimer,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _FakeTimer_5(
          this,
          Invocation.method(
            #getManagedPeriodicTimer,
            [
              duration,
              callback,
            ],
          ),
        ),
      ) as _i5.Timer);
  @override
  _i5.StreamSubscription<T> listenToStream<T>(
    _i5.Stream<T>? stream,
    void Function(T)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenToStream,
          [
            stream,
            onData,
          ],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue: _FakeStreamSubscription_6<T>(
          this,
          Invocation.method(
            #listenToStream,
            [
              stream,
              onData,
            ],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
      ) as _i5.StreamSubscription<T>);
  @override
  T manageAndReturnTypedDisposable<T extends _i6.Disposable>(T? disposable) =>
      (super.noSuchMethod(
        Invocation.method(
          #manageAndReturnTypedDisposable,
          [disposable],
        ),
        returnValue: _i19.dummyValue<T>(
          this,
          Invocation.method(
            #manageAndReturnTypedDisposable,
            [disposable],
          ),
        ),
      ) as T);
  @override
  _i5.Completer<T> manageCompleter<T>(_i5.Completer<T>? completer) =>
      (super.noSuchMethod(
        Invocation.method(
          #manageCompleter,
          [completer],
        ),
        returnValue: _FakeCompleter_7<T>(
          this,
          Invocation.method(
            #manageCompleter,
            [completer],
          ),
        ),
      ) as _i5.Completer<T>);
  @override
  void manageDisposable(_i6.Disposable? disposable) => super.noSuchMethod(
        Invocation.method(
          #manageDisposable,
          [disposable],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void manageStreamController(_i5.StreamController<dynamic>? controller) =>
      super.noSuchMethod(
        Invocation.method(
          #manageStreamController,
          [controller],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<Null> onDispose() => (super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  _i5.Future<Null> onWillDispose() => (super.noSuchMethod(
        Invocation.method(
          #onWillDispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
}

/// A class which mocks [Web3App].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeb3App extends _i1.Mock implements _i7.Web3App {
  MockWeb3App() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get protocol => (super.noSuchMethod(
        Invocation.getter(#protocol),
        returnValue: '',
      ) as String);
  @override
  int get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: 0,
      ) as int);
  @override
  _i7.ICore get core => (super.noSuchMethod(
        Invocation.getter(#core),
        returnValue: _FakeICore_8(
          this,
          Invocation.getter(#core),
        ),
      ) as _i7.ICore);
  @override
  _i7.PairingMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakePairingMetadata_9(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i7.PairingMetadata);
  @override
  _i7.ISignEngine get signEngine => (super.noSuchMethod(
        Invocation.getter(#signEngine),
        returnValue: _FakeISignEngine_10(
          this,
          Invocation.getter(#signEngine),
        ),
      ) as _i7.ISignEngine);
  @override
  set signEngine(_i7.ISignEngine? _signEngine) => super.noSuchMethod(
        Invocation.setter(
          #signEngine,
          _signEngine,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.IAuthEngine get authEngine => (super.noSuchMethod(
        Invocation.getter(#authEngine),
        returnValue: _FakeIAuthEngine_11(
          this,
          Invocation.getter(#authEngine),
        ),
      ) as _i7.IAuthEngine);
  @override
  set authEngine(_i7.IAuthEngine? _authEngine) => super.noSuchMethod(
        Invocation.setter(
          #authEngine,
          _authEngine,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Event<_i7.SessionConnect> get onSessionConnect => (super.noSuchMethod(
        Invocation.getter(#onSessionConnect),
        returnValue: _FakeEvent_2<_i7.SessionConnect>(
          this,
          Invocation.getter(#onSessionConnect),
        ),
      ) as _i4.Event<_i7.SessionConnect>);
  @override
  _i4.Event<_i7.SessionEvent> get onSessionEvent => (super.noSuchMethod(
        Invocation.getter(#onSessionEvent),
        returnValue: _FakeEvent_2<_i7.SessionEvent>(
          this,
          Invocation.getter(#onSessionEvent),
        ),
      ) as _i4.Event<_i7.SessionEvent>);
  @override
  _i4.Event<_i7.SessionExpire> get onSessionExpire => (super.noSuchMethod(
        Invocation.getter(#onSessionExpire),
        returnValue: _FakeEvent_2<_i7.SessionExpire>(
          this,
          Invocation.getter(#onSessionExpire),
        ),
      ) as _i4.Event<_i7.SessionExpire>);
  @override
  _i4.Event<_i7.SessionProposalEvent> get onProposalExpire =>
      (super.noSuchMethod(
        Invocation.getter(#onProposalExpire),
        returnValue: _FakeEvent_2<_i7.SessionProposalEvent>(
          this,
          Invocation.getter(#onProposalExpire),
        ),
      ) as _i4.Event<_i7.SessionProposalEvent>);
  @override
  _i4.Event<_i7.SessionExtend> get onSessionExtend => (super.noSuchMethod(
        Invocation.getter(#onSessionExtend),
        returnValue: _FakeEvent_2<_i7.SessionExtend>(
          this,
          Invocation.getter(#onSessionExtend),
        ),
      ) as _i4.Event<_i7.SessionExtend>);
  @override
  _i4.Event<_i7.SessionPing> get onSessionPing => (super.noSuchMethod(
        Invocation.getter(#onSessionPing),
        returnValue: _FakeEvent_2<_i7.SessionPing>(
          this,
          Invocation.getter(#onSessionPing),
        ),
      ) as _i4.Event<_i7.SessionPing>);
  @override
  _i4.Event<_i7.SessionUpdate> get onSessionUpdate => (super.noSuchMethod(
        Invocation.getter(#onSessionUpdate),
        returnValue: _FakeEvent_2<_i7.SessionUpdate>(
          this,
          Invocation.getter(#onSessionUpdate),
        ),
      ) as _i4.Event<_i7.SessionUpdate>);
  @override
  _i4.Event<_i7.SessionDelete> get onSessionDelete => (super.noSuchMethod(
        Invocation.getter(#onSessionDelete),
        returnValue: _FakeEvent_2<_i7.SessionDelete>(
          this,
          Invocation.getter(#onSessionDelete),
        ),
      ) as _i4.Event<_i7.SessionDelete>);
  @override
  _i8.IGenericStore<_i7.ProposalData> get proposals => (super.noSuchMethod(
        Invocation.getter(#proposals),
        returnValue: _FakeIGenericStore_12<_i7.ProposalData>(
          this,
          Invocation.getter(#proposals),
        ),
      ) as _i8.IGenericStore<_i7.ProposalData>);
  @override
  _i9.ISessions get sessions => (super.noSuchMethod(
        Invocation.getter(#sessions),
        returnValue: _FakeISessions_13(
          this,
          Invocation.getter(#sessions),
        ),
      ) as _i9.ISessions);
  @override
  _i8.IGenericStore<_i7.SessionRequest> get pendingRequests =>
      (super.noSuchMethod(
        Invocation.getter(#pendingRequests),
        returnValue: _FakeIGenericStore_12<_i7.SessionRequest>(
          this,
          Invocation.getter(#pendingRequests),
        ),
      ) as _i8.IGenericStore<_i7.SessionRequest>);
  @override
  _i7.IPairingStore get pairings => (super.noSuchMethod(
        Invocation.getter(#pairings),
        returnValue: _FakeIPairingStore_14(
          this,
          Invocation.getter(#pairings),
        ),
      ) as _i7.IPairingStore);
  @override
  _i4.Event<_i7.AuthResponse> get onAuthResponse => (super.noSuchMethod(
        Invocation.getter(#onAuthResponse),
        returnValue: _FakeEvent_2<_i7.AuthResponse>(
          this,
          Invocation.getter(#onAuthResponse),
        ),
      ) as _i4.Event<_i7.AuthResponse>);
  @override
  _i8.IGenericStore<_i7.AuthPublicKey> get authKeys => (super.noSuchMethod(
        Invocation.getter(#authKeys),
        returnValue: _FakeIGenericStore_12<_i7.AuthPublicKey>(
          this,
          Invocation.getter(#authKeys),
        ),
      ) as _i8.IGenericStore<_i7.AuthPublicKey>);
  @override
  _i8.IGenericStore<String> get pairingTopics => (super.noSuchMethod(
        Invocation.getter(#pairingTopics),
        returnValue: _FakeIGenericStore_12<String>(
          this,
          Invocation.getter(#pairingTopics),
        ),
      ) as _i8.IGenericStore<String>);
  @override
  _i8.IGenericStore<_i7.StoredCacao> get completeRequests =>
      (super.noSuchMethod(
        Invocation.getter(#completeRequests),
        returnValue: _FakeIGenericStore_12<_i7.StoredCacao>(
          this,
          Invocation.getter(#completeRequests),
        ),
      ) as _i8.IGenericStore<_i7.StoredCacao>);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i7.ConnectResponse> connect({
    Map<String, _i7.RequiredNamespace>? requiredNamespaces,
    Map<String, _i7.RequiredNamespace>? optionalNamespaces,
    Map<String, String>? sessionProperties,
    String? pairingTopic,
    List<_i7.Relay>? relays,
    List<List<String>>? methods = const [
      [
        r'wc_sessionPropose',
        r'wc_sessionRequest',
      ],
      [r'wc_authRequest'],
    ],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #requiredNamespaces: requiredNamespaces,
            #optionalNamespaces: optionalNamespaces,
            #sessionProperties: sessionProperties,
            #pairingTopic: pairingTopic,
            #relays: relays,
            #methods: methods,
          },
        ),
        returnValue:
            _i5.Future<_i7.ConnectResponse>.value(_FakeConnectResponse_15(
          this,
          Invocation.method(
            #connect,
            [],
            {
              #requiredNamespaces: requiredNamespaces,
              #optionalNamespaces: optionalNamespaces,
              #sessionProperties: sessionProperties,
              #pairingTopic: pairingTopic,
              #relays: relays,
              #methods: methods,
            },
          ),
        )),
      ) as _i5.Future<_i7.ConnectResponse>);
  @override
  _i5.Future<dynamic> request({
    required String? topic,
    required String? chainId,
    required _i7.SessionRequestParams? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [],
          {
            #topic: topic,
            #chainId: chainId,
            #request: request,
          },
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  void registerEventHandler({
    required String? chainId,
    required String? event,
    void Function(
      String,
      dynamic,
    )? handler,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerEventHandler,
          [],
          {
            #chainId: chainId,
            #event: event,
            #handler: handler,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> ping({required String? topic}) => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
          {#topic: topic},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> disconnectSession({
    required String? topic,
    required _i7.WalletConnectError? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnectSession,
          [],
          {
            #topic: topic,
            #reason: reason,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  Map<String, _i7.SessionData> getActiveSessions() => (super.noSuchMethod(
        Invocation.method(
          #getActiveSessions,
          [],
        ),
        returnValue: <String, _i7.SessionData>{},
      ) as Map<String, _i7.SessionData>);
  @override
  Map<String, _i7.SessionData> getSessionsForPairing(
          {required String? pairingTopic}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionsForPairing,
          [],
          {#pairingTopic: pairingTopic},
        ),
        returnValue: <String, _i7.SessionData>{},
      ) as Map<String, _i7.SessionData>);
  @override
  Map<String, _i7.ProposalData> getPendingSessionProposals() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingSessionProposals,
          [],
        ),
        returnValue: <String, _i7.ProposalData>{},
      ) as Map<String, _i7.ProposalData>);
  @override
  _i5.Future<_i7.AuthRequestResponse> requestAuth({
    required _i7.AuthRequestParams? params,
    String? pairingTopic,
    List<List<String>>? methods = const [
      [
        r'wc_sessionPropose',
        r'wc_sessionRequest',
      ],
      [r'wc_authRequest'],
    ],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestAuth,
          [],
          {
            #params: params,
            #pairingTopic: pairingTopic,
            #methods: methods,
          },
        ),
        returnValue: _i5.Future<_i7.AuthRequestResponse>.value(
            _FakeAuthRequestResponse_16(
          this,
          Invocation.method(
            #requestAuth,
            [],
            {
              #params: params,
              #pairingTopic: pairingTopic,
              #methods: methods,
            },
          ),
        )),
      ) as _i5.Future<_i7.AuthRequestResponse>);
  @override
  Map<int, _i7.StoredCacao> getCompletedRequestsForPairing(
          {required String? pairingTopic}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletedRequestsForPairing,
          [],
          {#pairingTopic: pairingTopic},
        ),
        returnValue: <int, _i7.StoredCacao>{},
      ) as Map<int, _i7.StoredCacao>);
  @override
  String formatAuthMessage({
    required String? iss,
    required _i7.CacaoRequestPayload? cacaoPayload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #formatAuthMessage,
          [],
          {
            #iss: iss,
            #cacaoPayload: cacaoPayload,
          },
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [Sessions].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessions extends _i1.Mock implements _i7.Sessions {
  MockSessions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: '',
      ) as String);
  @override
  String get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: '',
      ) as String);
  @override
  _i10.IStore<dynamic> get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeIStore_17<dynamic>(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i10.IStore<dynamic>);
  @override
  _i4.Event<_i7.StoreCreateEvent<_i7.SessionData>> get onCreate =>
      (super.noSuchMethod(
        Invocation.getter(#onCreate),
        returnValue: _FakeEvent_2<_i7.StoreCreateEvent<_i7.SessionData>>(
          this,
          Invocation.getter(#onCreate),
        ),
      ) as _i4.Event<_i7.StoreCreateEvent<_i7.SessionData>>);
  @override
  _i4.Event<_i7.StoreUpdateEvent<_i7.SessionData>> get onUpdate =>
      (super.noSuchMethod(
        Invocation.getter(#onUpdate),
        returnValue: _FakeEvent_2<_i7.StoreUpdateEvent<_i7.SessionData>>(
          this,
          Invocation.getter(#onUpdate),
        ),
      ) as _i4.Event<_i7.StoreUpdateEvent<_i7.SessionData>>);
  @override
  _i4.Event<_i7.StoreDeleteEvent<_i7.SessionData>> get onDelete =>
      (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeEvent_2<_i7.StoreDeleteEvent<_i7.SessionData>>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i4.Event<_i7.StoreDeleteEvent<_i7.SessionData>>);
  @override
  _i4.Event<_i7.StoreSyncEvent> get onSync => (super.noSuchMethod(
        Invocation.getter(#onSync),
        returnValue: _FakeEvent_2<_i7.StoreSyncEvent>(
          this,
          Invocation.getter(#onSync),
        ),
      ) as _i4.Event<_i7.StoreSyncEvent>);
  @override
  Map<String, _i7.SessionData> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, _i7.SessionData>{},
      ) as Map<String, _i7.SessionData>);
  @override
  set data(Map<String, _i7.SessionData>? _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.SessionData Function(dynamic) get fromJson => (super.noSuchMethod(
        Invocation.getter(#fromJson),
        returnValue: (dynamic __p0) => _FakeSessionData_18(
          this,
          Invocation.getter(#fromJson),
        ),
      ) as _i7.SessionData Function(dynamic));
  @override
  String get storageKey => (super.noSuchMethod(
        Invocation.getter(#storageKey),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<void> update(
    String? topic, {
    int? expiry,
    Map<String, _i7.Namespace>? namespaces,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [topic],
          {
            #expiry: expiry,
            #namespaces: namespaces,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  bool has(String? key) => (super.noSuchMethod(
        Invocation.method(
          #has,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i7.SessionData? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as _i7.SessionData?);
  @override
  List<_i7.SessionData> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i7.SessionData>[],
      ) as List<_i7.SessionData>);
  @override
  _i5.Future<void> set(
    String? key,
    _i7.SessionData? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> persist() => (super.noSuchMethod(
        Invocation.method(
          #persist,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> restore() => (super.noSuchMethod(
        Invocation.method(
          #restore,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void checkInitialized() => super.noSuchMethod(
        Invocation.method(
          #checkInitialized,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RelayClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRelayClient extends _i1.Mock implements _i26.RelayClient {
  MockRelayClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Event<_i4.EventArgs> get onRelayClientConnect => (super.noSuchMethod(
        Invocation.getter(#onRelayClientConnect),
        returnValue: _FakeEvent_2<_i4.EventArgs>(
          this,
          Invocation.getter(#onRelayClientConnect),
        ),
      ) as _i4.Event<_i4.EventArgs>);
  @override
  _i4.Event<_i4.EventArgs> get onRelayClientDisconnect => (super.noSuchMethod(
        Invocation.getter(#onRelayClientDisconnect),
        returnValue: _FakeEvent_2<_i4.EventArgs>(
          this,
          Invocation.getter(#onRelayClientDisconnect),
        ),
      ) as _i4.Event<_i4.EventArgs>);
  @override
  _i4.Event<_i7.ErrorEvent> get onRelayClientError => (super.noSuchMethod(
        Invocation.getter(#onRelayClientError),
        returnValue: _FakeEvent_2<_i7.ErrorEvent>(
          this,
          Invocation.getter(#onRelayClientError),
        ),
      ) as _i4.Event<_i7.ErrorEvent>);
  @override
  _i4.Event<_i7.MessageEvent> get onRelayClientMessage => (super.noSuchMethod(
        Invocation.getter(#onRelayClientMessage),
        returnValue: _FakeEvent_2<_i7.MessageEvent>(
          this,
          Invocation.getter(#onRelayClientMessage),
        ),
      ) as _i4.Event<_i7.MessageEvent>);
  @override
  _i4.Event<_i7.SubscriptionEvent> get onSubscriptionCreated =>
      (super.noSuchMethod(
        Invocation.getter(#onSubscriptionCreated),
        returnValue: _FakeEvent_2<_i7.SubscriptionEvent>(
          this,
          Invocation.getter(#onSubscriptionCreated),
        ),
      ) as _i4.Event<_i7.SubscriptionEvent>);
  @override
  _i4.Event<_i7.SubscriptionDeletionEvent> get onSubscriptionDeleted =>
      (super.noSuchMethod(
        Invocation.getter(#onSubscriptionDeleted),
        returnValue: _FakeEvent_2<_i7.SubscriptionDeletionEvent>(
          this,
          Invocation.getter(#onSubscriptionDeleted),
        ),
      ) as _i4.Event<_i7.SubscriptionDeletionEvent>);
  @override
  _i4.Event<_i4.EventArgs> get onSubscriptionResubscribed =>
      (super.noSuchMethod(
        Invocation.getter(#onSubscriptionResubscribed),
        returnValue: _FakeEvent_2<_i4.EventArgs>(
          this,
          Invocation.getter(#onSubscriptionResubscribed),
        ),
      ) as _i4.Event<_i4.EventArgs>);
  @override
  _i4.Event<_i4.EventArgs> get onSubscriptionSync => (super.noSuchMethod(
        Invocation.getter(#onSubscriptionSync),
        returnValue: _FakeEvent_2<_i4.EventArgs>(
          this,
          Invocation.getter(#onSubscriptionSync),
        ),
      ) as _i4.Event<_i4.EventArgs>);
  @override
  set jsonRPC(_i27.Peer? _jsonRPC) => super.noSuchMethod(
        Invocation.setter(
          #jsonRPC,
          _jsonRPC,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, _i5.Future<dynamic>> get pendingSubscriptions =>
      (super.noSuchMethod(
        Invocation.getter(#pendingSubscriptions),
        returnValue: <String, _i5.Future<dynamic>>{},
      ) as Map<String, _i5.Future<dynamic>>);
  @override
  set pendingSubscriptions(
          Map<String, _i5.Future<dynamic>>? _pendingSubscriptions) =>
      super.noSuchMethod(
        Invocation.setter(
          #pendingSubscriptions,
          _pendingSubscriptions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.IMessageTracker get messageTracker => (super.noSuchMethod(
        Invocation.getter(#messageTracker),
        returnValue: _FakeIMessageTracker_19(
          this,
          Invocation.getter(#messageTracker),
        ),
      ) as _i11.IMessageTracker);
  @override
  set messageTracker(_i11.IMessageTracker? _messageTracker) =>
      super.noSuchMethod(
        Invocation.setter(
          #messageTracker,
          _messageTracker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.IGenericStore<String> get topicMap => (super.noSuchMethod(
        Invocation.getter(#topicMap),
        returnValue: _FakeIGenericStore_12<String>(
          this,
          Invocation.getter(#topicMap),
        ),
      ) as _i8.IGenericStore<String>);
  @override
  set topicMap(_i8.IGenericStore<String>? _topicMap) => super.noSuchMethod(
        Invocation.setter(
          #topicMap,
          _topicMap,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.IWebSocketHandler get socketHandler => (super.noSuchMethod(
        Invocation.getter(#socketHandler),
        returnValue: _FakeIWebSocketHandler_20(
          this,
          Invocation.getter(#socketHandler),
        ),
      ) as _i12.IWebSocketHandler);
  @override
  _i7.ICore get core => (super.noSuchMethod(
        Invocation.getter(#core),
        returnValue: _FakeICore_8(
          this,
          Invocation.getter(#core),
        ),
      ) as _i7.ICore);
  @override
  set core(_i7.ICore? _core) => super.noSuchMethod(
        Invocation.setter(
          #core,
          _core,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> publish({
    required String? topic,
    required String? message,
    required int? ttl,
    required int? tag,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publish,
          [],
          {
            #topic: topic,
            #message: message,
            #ttl: ttl,
            #tag: tag,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<String> subscribe({required String? topic}) => (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [],
          {#topic: topic},
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<void> unsubscribe({required String? topic}) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [],
          {#topic: topic},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> connect({String? relayUrl}) => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {#relayUrl: relayUrl},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<bool> handlePublish(
    String? topic,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handlePublish,
          [
            topic,
            message,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i28.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);
  @override
  _i5.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_21(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_21(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_21(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_21(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_21(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_21(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<_i30.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
      ) as _i5.Future<_i30.Uint8List>);
  @override
  _i5.Future<_i3.StreamedResponse> send(_i3.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_22(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
