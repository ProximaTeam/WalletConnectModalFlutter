// Mocks generated by Mockito 5.4.2 from annotations
// in walletconnect_modal_flutter/test/mock_classes.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i19;
import 'dart:typed_data' as _i20;
import 'dart:ui' as _i13;

import 'package:flutter/material.dart' as _i2;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:url_launcher/url_launcher.dart' as _i16;
import 'package:w_common/disposable.dart' as _i6;
import 'package:walletconnect_flutter_v2/walletconnect_flutter_v2.dart' as _i10;
import 'package:walletconnect_modal_flutter/models/listings.dart' as _i9;
import 'package:walletconnect_modal_flutter/services/explorer/explorer_service.dart'
    as _i7;
import 'package:walletconnect_modal_flutter/services/explorer/i_explorer_service.dart'
    as _i4;
import 'package:walletconnect_modal_flutter/services/utils/platform/i_platform_utils.dart'
    as _i18;
import 'package:walletconnect_modal_flutter/services/utils/platform/platform_utils.dart'
    as _i17;
import 'package:walletconnect_modal_flutter/services/utils/url/url_utils.dart'
    as _i15;
import 'package:walletconnect_modal_flutter/services/walletconnect_modal/i_walletconnect_modal_service.dart'
    as _i12;
import 'package:walletconnect_modal_flutter/services/walletconnect_modal/walletconnect_modal_service.dart'
    as _i11;
import 'package:walletconnect_modal_flutter/widgets/grid_list/grid_list_item_model.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIExplorerService_2 extends _i1.SmartFake
    implements _i4.IExplorerService {
  _FakeIExplorerService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_3<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManagedDisposer_4 extends _i1.SmartFake
    implements _i6.ManagedDisposer {
  _FakeManagedDisposer_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimer_5 extends _i1.SmartFake implements _i5.Timer {
  _FakeTimer_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_6<T1> extends _i1.SmartFake
    implements _i5.StreamSubscription<T1> {
  _FakeStreamSubscription_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompleter_7<T1> extends _i1.SmartFake implements _i5.Completer<T1> {
  _FakeCompleter_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_8 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_9 extends _i1.SmartFake
    implements _i3.StreamedResponse {
  _FakeStreamedResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExplorerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExplorerService extends _i1.Mock implements _i7.ExplorerService {
  MockExplorerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get explorerUriRoot => (super.noSuchMethod(
        Invocation.getter(#explorerUriRoot),
        returnValue: '',
      ) as String);
  @override
  String get projectId => (super.noSuchMethod(
        Invocation.getter(#projectId),
        returnValue: '',
      ) as String);
  @override
  set recommendedWalletIds(Set<String>? _recommendedWalletIds) =>
      super.noSuchMethod(
        Invocation.setter(
          #recommendedWalletIds,
          _recommendedWalletIds,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.ExcludedWalletState get excludedWalletState => (super.noSuchMethod(
        Invocation.getter(#excludedWalletState),
        returnValue: _i4.ExcludedWalletState.all,
      ) as _i4.ExcludedWalletState);
  @override
  set excludedWalletState(_i4.ExcludedWalletState? _excludedWalletState) =>
      super.noSuchMethod(
        Invocation.setter(
          #excludedWalletState,
          _excludedWalletState,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set excludedWalletIds(Set<String>? _excludedWalletIds) => super.noSuchMethod(
        Invocation.setter(
          #excludedWalletIds,
          _excludedWalletIds,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ValueNotifier<List<_i8.GridListItemModel<_i9.WalletData>>> get itemList =>
      (super.noSuchMethod(
        Invocation.getter(#itemList),
        returnValue:
            _FakeValueNotifier_0<List<_i8.GridListItemModel<_i9.WalletData>>>(
          this,
          Invocation.getter(#itemList),
        ),
      ) as _i2.ValueNotifier<List<_i8.GridListItemModel<_i9.WalletData>>>);
  @override
  set itemList(
          _i2.ValueNotifier<List<_i8.GridListItemModel<_i9.WalletData>>>?
              _itemList) =>
      super.noSuchMethod(
        Invocation.setter(
          #itemList,
          _itemList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ValueNotifier<bool> get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#initialized),
        ),
      ) as _i2.ValueNotifier<bool>);
  @override
  set initialized(_i2.ValueNotifier<bool>? _initialized) => super.noSuchMethod(
        Invocation.setter(
          #initialized,
          _initialized,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);
  @override
  _i5.Future<void> init({
    required String? referer,
    _i9.ListingParams? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {
            #referer: referer,
            #params: params,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void filterList({String? query}) => super.noSuchMethod(
        Invocation.method(
          #filterList,
          [],
          {#query: query},
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getWalletImageUrl({required String? imageId}) => (super.noSuchMethod(
        Invocation.method(
          #getWalletImageUrl,
          [],
          {#imageId: imageId},
        ),
        returnValue: '',
      ) as String);
  @override
  String getAssetImageUrl({required String? imageId}) => (super.noSuchMethod(
        Invocation.method(
          #getAssetImageUrl,
          [],
          {#imageId: imageId},
        ),
        returnValue: '',
      ) as String);
  @override
  _i10.Redirect? getRedirect({required String? name}) =>
      (super.noSuchMethod(Invocation.method(
        #getRedirect,
        [],
        {#name: name},
      )) as _i10.Redirect?);
  @override
  _i5.Future<List<_i9.Listing>> fetchListings({
    required String? endpoint,
    required String? referer,
    _i9.ListingParams? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchListings,
          [],
          {
            #endpoint: endpoint,
            #referer: referer,
            #params: params,
          },
        ),
        returnValue: _i5.Future<List<_i9.Listing>>.value(<_i9.Listing>[]),
      ) as _i5.Future<List<_i9.Listing>>);
  @override
  List<_i9.Listing> filterExcludedListings(
          {required List<_i9.Listing>? listings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterExcludedListings,
          [],
          {#listings: listings},
        ),
        returnValue: <_i9.Listing>[],
      ) as List<_i9.Listing>);
}

/// A class which mocks [WalletConnectModalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletConnectModalService extends _i1.Mock
    implements _i11.WalletConnectModalService {
  MockWalletConnectModalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.IExplorerService get explorerService => (super.noSuchMethod(
        Invocation.getter(#explorerService),
        returnValue: _FakeIExplorerService_2(
          this,
          Invocation.getter(#explorerService),
        ),
      ) as _i4.IExplorerService);
  @override
  set explorerService(_i4.IExplorerService? _explorerService) =>
      super.noSuchMethod(
        Invocation.setter(
          #explorerService,
          _explorerService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set connectResponse(_i10.ConnectResponse? _connectResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectResponse,
          _connectResponse,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set context(_i2.BuildContext? _context) => super.noSuchMethod(
        Invocation.setter(
          #context,
          _context,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);
  @override
  String get projectId => (super.noSuchMethod(
        Invocation.getter(#projectId),
        returnValue: '',
      ) as String);
  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i10.RequiredNamespace> get requiredNamespaces =>
      (super.noSuchMethod(
        Invocation.getter(#requiredNamespaces),
        returnValue: <String, _i10.RequiredNamespace>{},
      ) as Map<String, _i10.RequiredNamespace>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<Null> get didDispose => (super.noSuchMethod(
        Invocation.getter(#didDispose),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  String get disposableTypeName => (super.noSuchMethod(
        Invocation.getter(#disposableTypeName),
        returnValue: '',
      ) as String);
  @override
  int get disposalTreeSize => (super.noSuchMethod(
        Invocation.getter(#disposalTreeSize),
        returnValue: 0,
      ) as int);
  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);
  @override
  bool get isLeakFlagSet => (super.noSuchMethod(
        Invocation.getter(#isLeakFlagSet),
        returnValue: false,
      ) as bool);
  @override
  bool get isOrWillBeDisposed => (super.noSuchMethod(
        Invocation.getter(#isOrWillBeDisposed),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<Null> onDispose() => (super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  _i5.Future<void> open({
    required _i2.BuildContext? context,
    _i12.WalletConnectModalState? startState,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #open,
          [],
          {
            #context: context,
            #startState: startState,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void launchCurrentWallet() => super.noSuchMethod(
        Invocation.method(
          #launchCurrentWallet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setDefaultChain(
          {required Map<String, _i10.RequiredNamespace>? requiredNamespaces}) =>
      super.noSuchMethod(
        Invocation.method(
          #setDefaultChain,
          [],
          {#requiredNamespaces: requiredNamespaces},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setRequiredNamespaces(Map<String, _i10.RequiredNamespace>? namespaces) =>
      super.noSuchMethod(
        Invocation.method(
          #setRequiredNamespaces,
          [namespaces],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getReferer() => (super.noSuchMethod(
        Invocation.method(
          #getReferer,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<Null> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T> awaitBeforeDispose<T>(_i5.Future<T>? future) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitBeforeDispose,
          [future],
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #awaitBeforeDispose,
                  [future],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #awaitBeforeDispose,
                [future],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  void flagLeak([String? description]) => super.noSuchMethod(
        Invocation.method(
          #flagLeak,
          [description],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T> getManagedDelayedFuture<T>(
    Duration? duration,
    T Function()? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedDelayedFuture,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getManagedDelayedFuture,
                  [
                    duration,
                    callback,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #getManagedDelayedFuture,
                [
                  duration,
                  callback,
                ],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i6.ManagedDisposer getManagedDisposer(_i6.Disposer? disposer) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedDisposer,
          [disposer],
        ),
        returnValue: _FakeManagedDisposer_4(
          this,
          Invocation.method(
            #getManagedDisposer,
            [disposer],
          ),
        ),
      ) as _i6.ManagedDisposer);
  @override
  _i5.Timer getManagedTimer(
    Duration? duration,
    void Function()? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedTimer,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _FakeTimer_5(
          this,
          Invocation.method(
            #getManagedTimer,
            [
              duration,
              callback,
            ],
          ),
        ),
      ) as _i5.Timer);
  @override
  _i5.Timer getManagedPeriodicTimer(
    Duration? duration,
    void Function(_i5.Timer)? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagedPeriodicTimer,
          [
            duration,
            callback,
          ],
        ),
        returnValue: _FakeTimer_5(
          this,
          Invocation.method(
            #getManagedPeriodicTimer,
            [
              duration,
              callback,
            ],
          ),
        ),
      ) as _i5.Timer);
  @override
  _i5.StreamSubscription<T> listenToStream<T>(
    _i5.Stream<T>? stream,
    void Function(T)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenToStream,
          [
            stream,
            onData,
          ],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue: _FakeStreamSubscription_6<T>(
          this,
          Invocation.method(
            #listenToStream,
            [
              stream,
              onData,
            ],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
      ) as _i5.StreamSubscription<T>);
  @override
  T manageAndReturnTypedDisposable<T extends _i6.Disposable>(T? disposable) =>
      (super.noSuchMethod(
        Invocation.method(
          #manageAndReturnTypedDisposable,
          [disposable],
        ),
        returnValue: _i14.dummyValue<T>(
          this,
          Invocation.method(
            #manageAndReturnTypedDisposable,
            [disposable],
          ),
        ),
      ) as T);
  @override
  _i5.Completer<T> manageCompleter<T>(_i5.Completer<T>? completer) =>
      (super.noSuchMethod(
        Invocation.method(
          #manageCompleter,
          [completer],
        ),
        returnValue: _FakeCompleter_7<T>(
          this,
          Invocation.method(
            #manageCompleter,
            [completer],
          ),
        ),
      ) as _i5.Completer<T>);
  @override
  void manageDisposable(_i6.Disposable? disposable) => super.noSuchMethod(
        Invocation.method(
          #manageDisposable,
          [disposable],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void manageStreamController(_i5.StreamController<dynamic>? controller) =>
      super.noSuchMethod(
        Invocation.method(
          #manageStreamController,
          [controller],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<Null> onWillDispose() => (super.noSuchMethod(
        Invocation.method(
          #onWillDispose,
          [],
        ),
        returnValue: _i5.Future<Null>.value(),
      ) as _i5.Future<Null>);
}

/// A class which mocks [UrlUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlUtils extends _i1.Mock implements _i15.UrlUtils {
  MockUrlUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> Function(
    Uri, {
    _i16.LaunchMode? mode,
  }) get launchUrlFunc => (super.noSuchMethod(
        Invocation.getter(#launchUrlFunc),
        returnValue: (
          Uri url, {
          _i16.LaunchMode? mode,
        }) =>
            _i5.Future<bool>.value(false),
      ) as _i5.Future<bool> Function(
        Uri, {
        _i16.LaunchMode? mode,
      }));
  @override
  _i5.Future<bool> Function(Uri) get canLaunchUrlFunc => (super.noSuchMethod(
        Invocation.getter(#canLaunchUrlFunc),
        returnValue: (Uri url) => _i5.Future<bool>.value(false),
      ) as _i5.Future<bool> Function(Uri));
  @override
  _i5.Future<bool> isInstalled(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #isInstalled,
          [uri],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<void> launchRedirect({
    Uri? nativeUri,
    Uri? universalUri,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchRedirect,
          [],
          {
            #nativeUri: nativeUri,
            #universalUri: universalUri,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> navigateDeepLink({
    String? nativeLink,
    String? universalLink,
    required String? wcURI,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateDeepLink,
          [],
          {
            #nativeLink: nativeLink,
            #universalLink: universalLink,
            #wcURI: wcURI,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [PlatformUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformUtils extends _i1.Mock implements _i17.PlatformUtils {
  MockPlatformUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.PlatformType getPlatformType() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformType,
          [],
        ),
        returnValue: _i18.PlatformType.mobile,
      ) as _i18.PlatformType);
  @override
  bool isMobileWidth(double? width) => (super.noSuchMethod(
        Invocation.method(
          #isMobileWidth,
          [width],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i19.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i19.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i19.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i19.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<_i20.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i20.Uint8List>.value(_i20.Uint8List(0)),
      ) as _i5.Future<_i20.Uint8List>);
  @override
  _i5.Future<_i3.StreamedResponse> send(_i3.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_9(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
